


    ===================================================================
    #                                                                 #
    #                                                                 #
    #                                                                 #
    #               N  O  T  E  S    &    T  O  D  O  S               #
    #                                                                 #
    #              =====================================              #
    #                                                                 #
    #                      Nevma (info@nevma.gr)                      #
    #                                                                 #
    #                                                                 #
    #                                                                 #
    ===================================================================



  NEXT DEVELOPMENT
  ================
  
  ***
    
    - NEW SCREENSHOTS
    
    MENTION THAT YOU CAN NOW DEBUG NICELY IN FIREFOX DEVELOPER TOOLS IN RESPONSIVE DESIGN MODE TOO

    ONLY WORKS WITH THE IMG ELEMENT SO FAR
    
  ***
  
    1. CDN/VARNISH SUPPORT

      - Images in CSS are not handled

      - HTML replace image src server side

        - Then add resolution url parameter browser side on DOMContentLoaded

        - Slight SEO issue because images have no src attribute

          - Use <noscript> tags for images 
            (for users who don't have JavaScript enabled and search engine bots)
          - Link to your images. The img src or in a hidden href or smth.

      - Watch DOM for changes and catch newly inserted images

    2. PERIODIC CALCULATIONS

      - Daily cache calculation

      - Show mean image value in cache
      - Report it in plugin settings metaboxes
      - Report it in email
      - Report as an admin message
      - Report in a dashboard widget

    3. NEW SETTINGS

      - Detect if PNGs have transparency and

        Either leave them be
        Or crunch them with their transparency intact if possible

      - See:

        - http://stackoverflow.com/questions/5495275/how-to-check-if-an-image-has-transparency-using-gd
        - http://www.jonefox.com/blog/2011/04/15/how-to-detect-transparency-in-png-images/comment-page-1/
        - http://camendesign.com/code/uth1_is-png-32bit
          
      - Transform PNGs to PNG8 (or not?)
      - PNG colour depth to keep
      - Resize equal to a device's multiple size, eg 150%, for better quality but not full retina
      - Exceptions for ceimages

      - Crunch original images and the registered thumbnails!

      - Allow debug or not

      - Periodically cleanup cache
      - Periodically cleanup cache old files (only the fresh ones are usually necessary)

      - Analytic, per breakpoint, cache report.

    4. WP MULTISITE SUPPORT

    5. WP CONTENT OUTSIDE OF WORDPRESS INSTALLATION

    6. DEBUG IDEAS 

      - Put a text input for the use to enter an image url and show it via adaptive images
      - Parse the result of an image with the ?debug=true to check if all is ok
      - Load a pseudo template file in the browser where you can test frontend stuff that need javascript
      - Echo the contents of the htaccess file part along with the other settings dump
      - Put a "help me, i do not know how to test if the plugin works" section

    7. TESTS/COMPATIBILITY

      - VAGRANT environment problem

        See https://wordpress.org/support/topic/images-never-generate-in-cache 

        and https://github.com/wpengine/hgv

      - NextGEN
      - WP-Rocket
      - W3 Total
      - WP Super Cache
      - Hyper Cache
      - Autoptimize plugin

      - How much is the storage overhead of the cache for a big site!
    
    8. DOCUMENTATION

      - A website

      - A diagram of how the plugin works graphically

        Browser : Hey, server, could you send me awesome-summer-picture.jpg?
        Server  : Yeah sure, just one thing, what are your screen dimensions?
        Browser : Oh, OK, I'am in a 320x568 retina screen device!
        Server  : Great, so I will shrink the image as close to 320px.
        Browser : No problemo!
        Server  : That will be a 480px image according to my configuration. Here you go!
        Browser : Got it! Whoah, that was quick, thank you very much...
        Server  : Any time!

      - If you want to provide crystal clear full size images to your users, DO NOT USE THE PLUGIN !!!

      - I must provide an easy ad hoc way for users to override the resize wherever necessary
        (perhaps via the ?resolution=original url parameter)

      - Have a clear and complete "features" section
      - Getting started section
      - Prerequisites section

        - PHP GD
        - Writeable file system
        - Cookies
        - CDN not strip url parameters

      - What-could-go-wrong section for usual problems.
      - A website
      
      - Tools which do emulate a mobile screen (Webpatetest.org) and tools which don't (GTmetrix, Pingdom)
      - Chrome Developer Tools, Firebug
      - Make a video of the testing procedure
      - An extra way to test is by adding the ?resolution= parameter to an image url
      - Better "How to test" that the plugin actually works.

      - Reduces the need for responsive images only down to cases where art direction is required 

      - Contact major managed hosting providers so that they might give you demo accounts to test the plugin in their 
        environments (pressidium, flywheel, wpengine, etc)
      
      - NGINX SETTINGS

        location assets {
        }
          
        location cache/adaptive-images { *** THE CACHE DIR INSIDE /wp-content ***
        }
          
        location / {
            rewrite \.(?:jpe?g|gif|png)$ /adaptive-images-script.php; *** THIS IS THE PHP SCRIPT ***
        }

    *** The Martino case:

        Url is like http://clients.nevma.gr/~user/
        
        The installation home is like /home/users/username/public_html
        
        But the requested URIs are like    --->      /wp-content/uploads/2015/08/...
                               and not like -> /~user/wp-content/uploads/2015/08/...
    
    *** The JÃ¶rg case:
    
        Images are served via a subdomain, so as to maximize browser connections, 
        but they are actually still in the usual server dirs.
        
        This is one edge case where the plugin cannot serve them, 
        since the images are not served by the same WordPress installation,
        neither are they served by a CDN or Varnish!
        
    *** Monetisation
        
        Ads (third-party) in the sidebar.
        Replace original images and provide a service that stores the originals just in case!
        Advertise that we (Nevma) provide WordPress services, we are WordPress experts.

  

  VARIOUS FEATURES
  ================
    
    - Testing: set up funcions in a way that the image generation can be tested
    - Functions prefix "ai_"
    - WordPress 3.0 and down allow the "+"" character in filenames
    - Use PHP::exec for cache purge and cache size calculation (not reliably allowed by hosts)
    - Does this plugin work for you? Then say so! Mail, tweet, like, etc
    - Upscale images (smoothly)?
    - This plugin has served XXX images successfully :-)
    - This plugin happily serves XX images from its cache :-)
    - This plugin happily serves XXmb from its cache :-)
    - Cache directory could be anywhere in the server
    - Watch cache feature is sort of pointless in WordPress or could even be done without asking
    - Open a page with an adaptive images debug parameter and do your Javascript checks there to see if the plugin is
      set up properly and working as expected
    


  FUTURE IDEAS
  ============

    - Ask users to rate plugin after X-images have been cached. 
    - Ajax calculate image cache size.
    - Ajax cleanup image cache size.
    - Per image cache purge.
    - Purge image cache beyond a size.
    - Per breakpoint cache purge.
    - Notify about cache size in WP cron, in WP admin, perhaps an email to the admin.
    - What if a user actually wants to see the full version of an image, even in a mobile network? 
    - When an image is deleted in the media gallery then its resized versions should be deleted, too.
    - When breakpoints are changed delete the cache directories of the unused breakpoints to clean up.
    - Original adaptive images PHP script error log is output inside the plugin files.
    - Send original images to search engine bots to preserve their metadata.



  ART DIRECTION
  =============

    Default anchors and zoom levels

      1. zoom level 1, 2, 3...
      2. anchor in image

        .--------------. 
        | tl   tc   tr |   top-left      top-center      top-right
        |              |
        | ml   mc   mr |   middle-left   middle-center   middle-right
        |              |
        | bl   bc   br |   bottom-left   bottom-center   bottom-right
        '--------------'

        *** OR AUTO DETECT IMAGES BETTER PARTS AND CROP ACCORDINGLY

      3. different aspect ratio/dimensions

        - by breakpoint
        - by orientation

        https://usecases.responsiveimages.org/#art-direction/
        http://davidwalsh.name/responsive-images/
        https://developers.google.com/web/fundamentals/media/images/images-in-markup/
        https://css-tricks.com/which-responsive-images-solution-should-you-use/
        http://www.smashingmagazine.com/2013/07/08/choosing-a-responsive-image-solution/



  ALSO CHECK OUT
  ==============

    - https://wordpress.org/plugins/ricg-responsive-images/
    - https://wordpress.org/plugins/responsify-wp/
    - https://usecases.responsiveimages.org/#art-direction/
    - http://davidwalsh.name/responsive-images/
    - https://developers.google.com/web/fundamentals/media/images/images-in-markup/
    - https://css-tricks.com/which-responsive-images-solution-should-you-use/
    - http://www.smashingmagazine.com/2013/07/08/choosing-a-responsive-image-solution/

    - http://cloudinary.com/ (cloud image management service)



  PROMOTION
  =========

    - https://codex.wordpress.org/Plugin_Submission_and_Promotion
    - https://www.competethemes.com/how-to-promote-wordpress-plugin/
    - http://wptavern.com/tips-for-promoting-newly-released-wordpress-plugins
    - http://www.insite.io/blog/the-loneliness-of-the-marketer-or-how-to-promote-a-baby-wordpress-plugin/
    - http://wpscoop.com/promoting-new-wordpress-plugins/
    - wplift
    - wpmayor
    - elegant themes
    - envato blog
    - wpexplorer
    - wpmudev blog



  UNIT TESTS FOR IMAGE GENERATION
  ===============================

    - PNG
    - PNG8
    - PNG256
    - PNG with alpha
    - PNG with trasparency
    - GIF
    - GIF with trasparency
    - JPEG(s)

    (Compare with services like TinyPNG, etc.)



  TEST CASES TO CHECK WITH EACH VERSION
  =====================================

    - Clean install
    - Deactivate then activate
    - Version 0.2.08 direct upgrade
    - Older version upgrade
    - Print debug info 
    - Images correctly sent at each breakpoint
    - Uninstall cleanup
    - Images to test
      - JPG
      - GIF
      - GIF with transparency
      - PNG
      - PNG with transparency
